name: esteira-ci-hlg

permissions: write-all

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11 ]
    steps:
      - name: Checa o git
        uses: actions/checkout@v2

      - name: Faz o set JDK Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build Maven
        run: mvn clean install

      - name: Roda os testes da aplica√ß√£o
        run: mvn test

      - name: Cria uma release/tag no gitHub
        id: release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: (DOCKER HUB) Faz o set do QEMU para
        uses: docker/setup-qemu-action@v2
      - name: (DOCKER HUB) Faz o set Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: (DOCKER HUB) Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: (DOCKER HUB) Build e push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: joaowudarski/trabalho-edsii:${{ steps.release.outputs.tag_name }}

      - name: (RENDER) Deploy no ambiente de hlg
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: srv-chl4vajhp8uej71rbbq0
          api-key: ${{ secrets.MY_RENDER_API_KEY }}

      - name: Wait for Render Deployment
        uses: bounceapp/render-action@0.6.0
        with:
          render-token: ${{ secrets.MY_RENDER_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          service-id: srv-chl4vajhp8uej71rbbq0
          retries: 20
          wait: 16000
          sleep: 30000

      - name: Criar PR para a master
        id: criar-pr
        uses: pyrbin/single-pr-updater@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          label: üöÄ release
          head: develop
          base: master
          title: Release ${{ steps.release.outputs.tag_name }}
          body: |
            ## [Release ${{ steps.release.outputs.tag_name }}](${{ steps.release.outputs.html_url }})
            ${{ steps.release.outputs.body }}
          draft: false

      - name: (EMAIL) Instala nodemailer
        run: npm install nodemailer

      - name: (EMAIL) Enviar e-mail
        run: node scripts/send-email.js
        env:
          SMTP_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          NUMBER_PR: ${{ steps.criar-pr.outputs.number }}
          TAG_NAME: ${{ steps.release.outputs.tag_name }}
          SEND_EMAILS: ${{ secrets.EMAIL_APPROVALS }}

      - name: Resetar m√°quina virtual
        uses: actions/checkout@v2
        with:
          clean: true

      - name: (VERSAO) Instala o maven
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: (VERSAO) Atualiza vers√£o no maven
        run: mvn -B versions:set -DnewVersion=${{ steps.release.outputs.tag_name }} -DgenerateBackupPoms=false

      - name: (VERSAO) Realiza o commit no pom da nova vers√£o
        uses: stefanzweifel/git-auto-commit-action@v4